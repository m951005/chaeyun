<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dao.MemberMapper">

  <!-- 회원정보 저장 -->
  <insert id="saveMember">
  	<!-- 
  		keyProperty: 변수로 사용할 이름
  		resultType: 키로 생성된 데이터의 타입
  		order: 메인쿼리 실행 전(BEFORE), 메인쿼리 실행 후(AFTER)
  		
  		selectKey 태그를 이용하면 메인쿼리를 수정하지 않아도 되는 장점이 있음
  	 -->
  	<selectKey keyProperty="id" resultType="long" order="BEFORE">
  		select seq_member.nextval from dual
  	</selectKey>
  	insert into member (
  		id,
  		name,
  		gender,
  		birth,
  		email
  	) values (
  		#{id},
  		#{name},
  		#{gender},
  		#{birth},
  		#{email}
  	)
  </insert>
  
  <!-- ID로 회원정보 검색 -->
  <select id="findMemberById" resultType="member">
  	select
	  	id,
	  	name,
	  	gender,
	  	birth,
	  	email
  	from
  		member
  	where
  		id = #{id}
  </select>
  
  <!-- 전체 회원정보 조회 -->
  <select id="findMembers" resultType="member">
  	select
	  	id,
	  	name,
	  	gender,
	  	birth,
	  	email
  	from
  		member
  </select>
  
  <!-- 회원정보 수정 -->
  <update id="updateMember">
  	update member
  	<set><!-- ','가 붙어있어도 마지막 ','는 지워줌 -->
  		<if test="name != null">name = #{name},</if>
  		<if test="gender != null">gender = #{gender},</if>
  		<if test="birth != null">birth = #{birth},</if>
  		<if test="email != null">email = #{email}</if>
  	</set>
  	where
  		id = #{id}
  </update>
  
  <!-- 회원정보 삭제 -->
  <delete id="removeMember">
    delete from member
    where
    	id = #{id}
  </delete>
</mapper>





