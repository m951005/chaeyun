package dao;

import java.util.ArrayList;
import java.util.List;

import org.apache.ibatis.session.SqlSession;
import org.apache.ibatis.session.SqlSessionFactory;

import config.MybatisConfig;
import vo.Board;

public class BoardDao {
	
	private SqlSessionFactory sqlSessionFactory = MybatisConfig.getSqlSessionFactory();
	
	// 게시글 작성
	public void saveBoard(Board board) {
		try (SqlSession sqlSession = sqlSessionFactory.openSession()) {
			BoardMapper mapper = sqlSession.getMapper(BoardMapper.class);
			mapper.saveBoard(board);
			sqlSession.commit();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	// 게시글 조회
	public Board findBoardById(Long id) {
		try (SqlSession sqlSession = sqlSessionFactory.openSession()) {
			BoardMapper mapper = sqlSession.getMapper(BoardMapper.class);
			return mapper.findBoardById(id);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return null;
	}
	
	// 게시글 전체 조회
	public List<Board> findBoards() {
		try (SqlSession sqlSession = sqlSessionFactory.openSession()) {
			BoardMapper mapper = sqlSession.getMapper(BoardMapper.class);
			return mapper.findBoards();
		} catch (Exception e) {
			e.printStackTrace();
		}
		return null;
	}
	
	// 검색 조건으로 게시글 조회
	public List<Board> findBoardsByCondition(Board board) {
		try (SqlSession sqlSession = sqlSessionFactory.openSession()) {
			BoardMapper mapper = sqlSession.getMapper(BoardMapper.class);
			return mapper.findBoardsByCondition(board);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return null;
	}
	
	// 여러 아이디로 게시글 조회
	public List<Board> findBoardsByIds(List<Long> ids) {
		try (SqlSession sqlSession = sqlSessionFactory.openSession()) {
			BoardMapper mapper = sqlSession.getMapper(BoardMapper.class);
			return mapper.findBoardsByIds(ids);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return null;
	}
	
	// 회원정보 삭제
	public void removeMember(String id) {
		try (SqlSession sqlSession = sqlSessionFactory.openSession()) {
			BoardMapper boardMapper = sqlSession.getMapper(BoardMapper.class);
			MemberMapper memberMapper = sqlSession.getMapper(MemberMapper.class);
			boardMapper.removeBoardByMemberId(id);
			memberMapper.removeMember(id);
			sqlSession.commit();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	
	public static void main(String[] args) {
		
		BoardDao boardDao = new BoardDao();
		
		// 게시글 저장
//		Board board1 = new Board("제목1", "내용1", "user1");
//		boardDao.saveBoard(board1);
		
//		Board board2 = new Board("제목2", "내용2", new Member("user2", null, null));
//		boardDao.saveBoard(board2);
		
		// 게시글 조회
//		Board findBoard = boardDao.findBoardById(1L);
//		System.out.println("findBoard: " + findBoard);
		
		// 게시글 전체 조회
//		List<Board> boards = boardDao.findBoards();
//		for(Board board : boards) {
//			System.out.println(board);
//		}
		
		// 검색 조건으로 게시글 조회
//		Board condition = new Board();
//		condition.setTitle("제목");
//		condition.setContents("내용");
//		List<Board> list = boardDao.findBoardsByCondition(condition);
//		for(Board board : list) {
//			System.out.println(board);
//		}
		
		// 여러 아이디로 게시글 조회
//		List<Long> ids = new ArrayList<>();
//		ids.add(1L);
//		ids.add(2L);
//		List<Board> list = boardDao.findBoardsByIds(ids);
//		for(Board board : list) {
//			System.out.println(board);
//		}
		
		// 회원정보 삭제
		boardDao.removeMember("user1");
	}
}
